<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        @Component：将类标识为普通组件
        @Controller：将类标识为控制层组件
        @Service：将类标识为业务层组件
        @Repository：将类标识为持久层组件
        通过注解加扫描所配置的bean的id，默认值为类名首字母小写的结果
        自定义id：可以在@Component("")配置属于自己的id

        exclude-filter：排除扫描
        type排除扫描方式 1. annotation 根据注解进行排除 2.assignable 根据类的类型进行排除
        include-filter：只扫描什么 需要设置use-default-filters="false"
        type包含扫描方式 1. annotation 根据注解进行包含 2.assignable 根据类的类型进行包含

        包含和排除只能有一个

        @Autowired:实现自动装配功能的注解
        1.@Autowired注解能够标识的位置
        a>标识在成员变量上，此时不需要设置成员变量的set方法
        b>标识在set方法上
        c>为当前成员变量赋值的有参构造上
        2.@Autowired注解原理
        a.默认通过byType的方式，在IOC容器中通过类型匹配某个bean为属性赋值
        b.如果有多个类型匹配的bean，则使用byName实现自动装配的效果
        即将要赋值的属性的属性名作为bean的id匹配某个bean为属性赋值
        c.若通过两种方式都无法实现自动装配，即IOC容器中有多个类型匹配的bean
        且这些bean的id和要赋值的属性的属性名都不一致，此时抛出异常：noUniqueBean...
        d.此时需要在要赋值的属性上，添加注解
        @Qualifier("userServiceImpl")
        通过该注解的value属性值，指定某个bean的id，将这个bean为属性赋值
        e.没有任何一个类型匹配的bean
        noSuchBean....

    -->
    <!--扫描组件-->
    <context:component-scan base-package="com.atguigu.spring" use-default-filters="true">
<!--        根据注解进行排除-->
<!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--        根据类的类型进行排除-->
<!--        <context:exclude-filter type="assignable" expression="com.atguigu.spring.controller.UserController"/>-->
<!--        <context:include-filter type="" expression=""/>-->
    </context:component-scan>

</beans>